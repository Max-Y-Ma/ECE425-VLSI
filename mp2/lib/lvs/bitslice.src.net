************************************************************************
* auCdl Netlist:
* 
* Library Name:  bitslice_rv32Lib
* Top Cell Name: bitslice
* View Name:     schematic
* Netlisted on:  Apr  4 16:20:21 2024
************************************************************************

*.EQUATION
*.SCALE METER
*.MEGA
.PARAM

*.GLOBAL vss!
+        vdd!
+        vdd:P
+        VDD:P
+        vss:G
+        VSS:G

*.PIN vss!
*+    vdd!
*+    vdd
*+    VDD
*+    vss
*+    VSS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    inv
* View Name:    schematic
************************************************************************

.SUBCKT inv A Z
*.PININFO A:I Z:O
MM0 Z A vdd! vdd! PMOS_VTL W=180.0n L=50n m=1
MM1 Z A vss! vss! NMOS_VTL W=90n L=50n m=1
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    trans
* View Name:    schematic
************************************************************************

.SUBCKT trans A G Gb Z
*.PININFO A:I G:I Gb:I Z:B
MM0 Z Gb A vdd! PMOS_VTL W=180.0n L=50n m=1
MM1 Z G A vss! NMOS_VTL W=90n L=50n m=1
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    mux2
* View Name:    schematic
************************************************************************

.SUBCKT mux2 A B S0 Z
*.PININFO A:I B:I S0:I Z:O
XI2 B S0 net1 Z / trans
XI1 A net1 S0 Z / trans
XI3 S0 net1 / inv
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    muxinv2
* View Name:    schematic
************************************************************************

.SUBCKT muxinv2 A B S0 Z
*.PININFO A:I B:I S0:I Z:O
XI0 A B S0 net1 / mux2
XI1 net1 Z / inv
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    fa
* View Name:    schematic
************************************************************************

.SUBCKT fa A B Cin Cout Sum
*.PININFO A:I B:I Cin:I Cout:O Sum:O
XI1 Cin Cinb / inv
XI13 Cout net10 / inv
XI11 Cin Cinb A mux1 / muxinv2
XI14 net10 B mux1 Sum / mux2
XI12 B A mux1 Cout / mux2
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    mux4
* View Name:    schematic
************************************************************************

.SUBCKT mux4 A B C D S0 S1 Z
*.PININFO A:I B:I C:I D:I S0:I S1:I Z:O
XI5 net12 S1 S1b Z / trans
XI4 net4 S1b S1 Z / trans
XI3 D S0 S0b net12 / trans
XI2 C S0b S0 net12 / trans
XI1 B S0 S0b net4 / trans
XI0 A S0b S0 net4 / trans
XI7 S1 S1b / inv
XI6 S0 S0b / inv
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    muxinv4
* View Name:    schematic
************************************************************************

.SUBCKT muxinv4 A B C D S0 S1 Z
*.PININFO A:I B:I C:I D:I S0:I S1:I Z:O
XI0 A B C D S0 S1 net7 / mux4
XI1 net7 Z / inv
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    nand2
* View Name:    schematic
************************************************************************

.SUBCKT nand2 A B Z
*.PININFO A:I B:I Z:O
MM1 net8 A vss! vss! NMOS_VTL W=180.0n L=50n m=1
MM0 Z B net8 vss! NMOS_VTL W=180.0n L=50n m=1
MM3 Z B vdd! vdd! PMOS_VTL W=180.0n L=50n m=1
MM2 Z A vdd! vdd! PMOS_VTL W=180.0n L=50n m=1
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    nor2
* View Name:    schematic
************************************************************************

.SUBCKT nor2 A B Z
*.PININFO A:I B:I Z:O
MM1 Z B vss! vss! NMOS_VTL W=90n L=50n m=1
MM0 Z A vss! vss! NMOS_VTL W=90n L=50n m=1
MM3 Z B net5 vdd! PMOS_VTL W=360.0n L=50n m=1
MM2 net5 A vdd! vdd! PMOS_VTL W=360.0n L=50n m=1
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    xnor2
* View Name:    schematic
************************************************************************

.SUBCKT xnor2 A B Z
*.PININFO A:I B:I Z:O
MM6 net8 A vdd! vdd! PMOS_VTL W=270.0n L=50n m=1
MM5 Z B net8 vdd! PMOS_VTL W=270.0n L=50n m=1
MM4 Z net4 vdd! vdd! PMOS_VTL W=180.0n L=50n m=1
MM1 net4 B vdd! vdd! PMOS_VTL W=180.0n L=50n m=1
MM0 net4 A vdd! vdd! PMOS_VTL W=180.0n L=50n m=1
MM9 net3 net4 vss! vss! NMOS_VTL W=180.0n L=50n m=1
MM8 Z B net3 vss! NMOS_VTL W=180.0n L=50n m=1
MM7 Z A net3 vss! NMOS_VTL W=180.0n L=50n m=1
MM3 net1 B vss! vss! NMOS_VTL W=180.0n L=50n m=1
MM2 net4 A net1 vss! NMOS_VTL W=180.0n L=50n m=1
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    alu
* View Name:    schematic
************************************************************************

.SUBCKT alu alu_cin alu_cout alu_mux_1_out alu_mux_2_out alu_op<1> alu_op<0> 
+ alu_out
*.PININFO alu_cin:I alu_mux_1_out:I alu_mux_2_out:I alu_op<1>:I alu_op<0>:I 
*.PININFO alu_cout:O alu_out:O
XI0 alu_mux_1_out alu_mux_2_out alu_cin alu_cout net5 / fa
XI15 net1 xor or and alu_op<0> alu_op<1> alu_out / muxinv4
XI3 alu_mux_1_out alu_mux_2_out and / nand2
XI4 alu_mux_1_out alu_mux_2_out or / nor2
XI5 alu_mux_1_out alu_mux_2_out xor / xnor2
XI16 net5 net1 / inv
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    buf
* View Name:    schematic
************************************************************************

.SUBCKT buf A Z
*.PININFO A:I Z:O
XI1 net2 Z / inv
XI0 A net2 / inv
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    shift
* View Name:    schematic
************************************************************************

.SUBCKT shift alu_mux_1_out shift_amount<4> shift_amount<3> shift_amount<2> 
+ shift_amount<1> shift_amount<0> shift_dir shift_in_from_left<4> 
+ shift_in_from_left<3> shift_in_from_left<2> shift_in_from_left<1> 
+ shift_in_from_left<0> shift_in_from_right<4> shift_in_from_right<3> 
+ shift_in_from_right<2> shift_in_from_right<1> shift_in_from_right<0> 
+ shift_out<5> shift_out<4> shift_out<3> shift_out<2> shift_out<1> shift_out<0>
*.PININFO alu_mux_1_out:I shift_amount<4>:I shift_amount<3>:I 
*.PININFO shift_amount<2>:I shift_amount<1>:I shift_amount<0>:I shift_dir:I 
*.PININFO shift_in_from_left<4>:I shift_in_from_left<3>:I 
*.PININFO shift_in_from_left<2>:I shift_in_from_left<1>:I 
*.PININFO shift_in_from_left<0>:I shift_in_from_right<4>:I 
*.PININFO shift_in_from_right<3>:I shift_in_from_right<2>:I 
*.PININFO shift_in_from_right<1>:I shift_in_from_right<0>:I shift_out<5>:O 
*.PININFO shift_out<4>:O shift_out<3>:O shift_out<2>:O shift_out<1>:O 
*.PININFO shift_out<0>:O
XI10 shift_out<0> net5 shift_amount<0> shift_out<1> / mux2
XI9 shift_out<1> net4 shift_amount<1> shift_out<2> / mux2
XI8 shift_out<2> net3 shift_amount<2> shift_out<3> / mux2
XI7 shift_out<3> net2 shift_amount<3> shift_out<4> / mux2
XI6 shift_out<4> net1 shift_amount<4> shift_out<5> / mux2
XI5 shift_in_from_right<0> shift_in_from_left<0> shift_dir net5 / mux2
XI4 shift_in_from_right<1> shift_in_from_left<1> shift_dir net4 / mux2
XI3 shift_in_from_right<2> shift_in_from_left<2> shift_dir net3 / mux2
XI2 shift_in_from_right<3> shift_in_from_left<3> shift_dir net2 / mux2
XI1 shift_in_from_right<4> shift_in_from_left<4> shift_dir net1 / mux2
XI29 alu_mux_1_out shift_out<0> / buf
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    cmp
* View Name:    schematic
************************************************************************

.SUBCKT cmp cmp_eq_in cmp_eq_out cmp_lt_in cmp_lt_out cmp_mux_out rs1_rdata
*.PININFO cmp_eq_in:I cmp_lt_in:I cmp_mux_out:I rs1_rdata:I cmp_eq_out:O 
*.PININFO cmp_lt_out:O
XI10 net7 net8 cmp_lt_out / nand2
XI9 net3 cmp_eq_in net7 / nand2
XI0 cmp_eq_in net1 net5 / nand2
XI2 rs1_rdata net2 net3 / nor2
XI11 cmp_lt_in net8 / inv
XI8 cmp_mux_out net2 / inv
XI3 net5 cmp_eq_out / inv
XI12 rs1_rdata cmp_mux_out net1 / xnor2
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    rs2_inverter
* View Name:    schematic
************************************************************************

.SUBCKT rs2_inverter alu_inv_rs2 rs2_after_inv rs2_rdata
*.PININFO alu_inv_rs2:I rs2_rdata:I rs2_after_inv:O
XI0 rs2_rdata rs2_data_inv alu_inv_rs2 rs2_after_inv / mux2
XI1 rs2_rdata rs2_data_inv / inv
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    bit1
* View Name:    schematic
************************************************************************

.SUBCKT bit1 A R W Z
*.PININFO A:I R:I W:I Z:O
XI13 W Wb / inv
XI15 R Rb / inv
XI2 net1 Bit / inv
XI1 net2 net1 / inv
XI14 Bit R Rb Z / trans
XI12 A W Wb net2 / trans
XI16 Bit Wb W net2 / trans
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    dlatch
* View Name:    schematic
************************************************************************

.SUBCKT dlatch D EN Q Qb
*.PININFO D:I EN:I Q:O Qb:O
XI16 D net2 / inv
XI18 ENB1 EN1 / inv
XI17 EN ENB1 / inv
XI20 Q Qb / inv
XI19 net3 Q / inv
XI21 Qb ENB1 EN1 net3 / trans
XI15 net2 EN1 ENB1 net3 / trans
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    reg1w1
* View Name:    schematic
************************************************************************

.SUBCKT reg1w1 CLK D Q Qb RE WE
*.PININFO CLK:I D:I RE:I WE:I Q:O Qb:O
XI0 D RE WE net4 / bit1
XI1 net4 CLK Q Qb / dlatch
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    pc
* View Name:    schematic
************************************************************************

.SUBCKT pc alu_out clk pc pc_mux_sel pc_reset_value pcp4 rst
*.PININFO alu_out:I clk:I pc_mux_sel:I pc_reset_value:I pcp4:I rst:I pc:O
XI0 clk pc_next pc net4 clk clkb / reg1w1
XI2 net7 pc_reset_value rst pc_next / mux2
XI1 pcp4 alu_out pc_mux_sel net7 / mux2
XI12 clk clkb / inv
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    pcadder
* View Name:    schematic
************************************************************************

.SUBCKT pcadder pc pc_adder_4 pc_cin pc_cout pcp4
*.PININFO pc:I pc_adder_4:I pc_cin:I pc_cout:O pcp4:O
XI4 pc pc_adder_4 pc_cin pc_cout pcp4 / fa
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    bit2
* View Name:    schematic
************************************************************************

.SUBCKT bit2 A R1 R2 W Z1 Z2
*.PININFO A:I R1:I R2:I W:I Z1:B Z2:B
XI10 net2 Bit / inv
XI4 net1 net2 / inv
XI0 R1 R1b / inv
XI13 W Wb / inv
XI15 R2 R2b / inv
XI16 Bit Wb W net1 / trans
XI5 A W Wb net1 / trans
XI3 Bit R2 R2b Z2 / trans
XI14 Bit R1 R1b Z1 / trans
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    reg2w32
* View Name:    schematic
************************************************************************

.SUBCKT reg2w32 CLK D Q1 Q1b Q2 Q2b RE1<31> RE1<30> RE1<29> RE1<28> RE1<27> 
+ RE1<26> RE1<25> RE1<24> RE1<23> RE1<22> RE1<21> RE1<20> RE1<19> RE1<18> 
+ RE1<17> RE1<16> RE1<15> RE1<14> RE1<13> RE1<12> RE1<11> RE1<10> RE1<9> 
+ RE1<8> RE1<7> RE1<6> RE1<5> RE1<4> RE1<3> RE1<2> RE1<1> RE1<0> RE2<31> 
+ RE2<30> RE2<29> RE2<28> RE2<27> RE2<26> RE2<25> RE2<24> RE2<23> RE2<22> 
+ RE2<21> RE2<20> RE2<19> RE2<18> RE2<17> RE2<16> RE2<15> RE2<14> RE2<13> 
+ RE2<12> RE2<11> RE2<10> RE2<9> RE2<8> RE2<7> RE2<6> RE2<5> RE2<4> RE2<3> 
+ RE2<2> RE2<1> RE2<0> WE<31> WE<30> WE<29> WE<28> WE<27> WE<26> WE<25> WE<24> 
+ WE<23> WE<22> WE<21> WE<20> WE<19> WE<18> WE<17> WE<16> WE<15> WE<14> WE<13> 
+ WE<12> WE<11> WE<10> WE<9> WE<8> WE<7> WE<6> WE<5> WE<4> WE<3> WE<2> WE<1> 
+ WE<0>
*.PININFO CLK:I D:I RE1<31>:I RE1<30>:I RE1<29>:I RE1<28>:I RE1<27>:I 
*.PININFO RE1<26>:I RE1<25>:I RE1<24>:I RE1<23>:I RE1<22>:I RE1<21>:I 
*.PININFO RE1<20>:I RE1<19>:I RE1<18>:I RE1<17>:I RE1<16>:I RE1<15>:I 
*.PININFO RE1<14>:I RE1<13>:I RE1<12>:I RE1<11>:I RE1<10>:I RE1<9>:I RE1<8>:I 
*.PININFO RE1<7>:I RE1<6>:I RE1<5>:I RE1<4>:I RE1<3>:I RE1<2>:I RE1<1>:I 
*.PININFO RE1<0>:I RE2<31>:I RE2<30>:I RE2<29>:I RE2<28>:I RE2<27>:I RE2<26>:I 
*.PININFO RE2<25>:I RE2<24>:I RE2<23>:I RE2<22>:I RE2<21>:I RE2<20>:I 
*.PININFO RE2<19>:I RE2<18>:I RE2<17>:I RE2<16>:I RE2<15>:I RE2<14>:I 
*.PININFO RE2<13>:I RE2<12>:I RE2<11>:I RE2<10>:I RE2<9>:I RE2<8>:I RE2<7>:I 
*.PININFO RE2<6>:I RE2<5>:I RE2<4>:I RE2<3>:I RE2<2>:I RE2<1>:I RE2<0>:I 
*.PININFO WE<31>:I WE<30>:I WE<29>:I WE<28>:I WE<27>:I WE<26>:I WE<25>:I 
*.PININFO WE<24>:I WE<23>:I WE<22>:I WE<21>:I WE<20>:I WE<19>:I WE<18>:I 
*.PININFO WE<17>:I WE<16>:I WE<15>:I WE<14>:I WE<13>:I WE<12>:I WE<11>:I 
*.PININFO WE<10>:I WE<9>:I WE<8>:I WE<7>:I WE<6>:I WE<5>:I WE<4>:I WE<3>:I 
*.PININFO WE<2>:I WE<1>:I WE<0>:I Q1:O Q1b:O Q2:O Q2b:O
XI1 D RE1<1> RE2<1> WE<1> net2 net7 / bit2
XI2 D RE1<2> RE2<2> WE<2> net2 net7 / bit2
XI3 D RE1<3> RE2<3> WE<3> net2 net7 / bit2
XI4 D RE1<4> RE2<4> WE<4> net2 net7 / bit2
XI5 D RE1<5> RE2<5> WE<5> net2 net7 / bit2
XI6 D RE1<6> RE2<6> WE<6> net2 net7 / bit2
XI7 D RE1<7> RE2<7> WE<7> net2 net7 / bit2
XI8 D RE1<8> RE2<8> WE<8> net2 net7 / bit2
XI9 D RE1<9> RE2<9> WE<9> net2 net7 / bit2
XI10 D RE1<10> RE2<10> WE<10> net2 net7 / bit2
XI11 D RE1<11> RE2<11> WE<11> net2 net7 / bit2
XI12 D RE1<12> RE2<12> WE<12> net2 net7 / bit2
XI13 D RE1<13> RE2<13> WE<13> net2 net7 / bit2
XI14 D RE1<14> RE2<14> WE<14> net2 net7 / bit2
XI15 D RE1<15> RE2<15> WE<15> net2 net7 / bit2
XI16 D RE1<16> RE2<16> WE<16> net2 net7 / bit2
XI17 D RE1<17> RE2<17> WE<17> net2 net7 / bit2
XI18 D RE1<18> RE2<18> WE<18> net2 net7 / bit2
XI19 D RE1<19> RE2<19> WE<19> net2 net7 / bit2
XI20 D RE1<20> RE2<20> WE<20> net2 net7 / bit2
XI21 D RE1<21> RE2<21> WE<21> net2 net7 / bit2
XI22 D RE1<22> RE2<22> WE<22> net2 net7 / bit2
XI23 D RE1<23> RE2<23> WE<23> net2 net7 / bit2
XI24 D RE1<24> RE2<24> WE<24> net2 net7 / bit2
XI25 D RE1<25> RE2<25> WE<25> net2 net7 / bit2
XI26 D RE1<26> RE2<26> WE<26> net2 net7 / bit2
XI27 D RE1<27> RE2<27> WE<27> net2 net7 / bit2
XI28 D RE1<28> RE2<28> WE<28> net2 net7 / bit2
XI29 D RE1<29> RE2<29> WE<29> net2 net7 / bit2
XI30 D RE1<30> RE2<30> WE<30> net2 net7 / bit2
XI31 D RE1<31> RE2<31> WE<31> net2 net7 / bit2
XI33 net2 CLK Q1 Q1b / dlatch
XI32 net7 CLK Q2 Q2b / dlatch
XI61 vss! RE2<0> RE2b net7 / trans
XI62 vss! RE1<0> RE1b net2 / trans
XI66 RE2<0> RE2b / inv
XI65 RE1<0> RE1b / inv
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    regfile
* View Name:    schematic
************************************************************************

.SUBCKT regfile clk rd_mux_out rd_sel<31> rd_sel<30> rd_sel<29> rd_sel<28> 
+ rd_sel<27> rd_sel<26> rd_sel<25> rd_sel<24> rd_sel<23> rd_sel<22> rd_sel<21> 
+ rd_sel<20> rd_sel<19> rd_sel<18> rd_sel<17> rd_sel<16> rd_sel<15> rd_sel<14> 
+ rd_sel<13> rd_sel<12> rd_sel<11> rd_sel<10> rd_sel<9> rd_sel<8> rd_sel<7> 
+ rd_sel<6> rd_sel<5> rd_sel<4> rd_sel<3> rd_sel<2> rd_sel<1> rd_sel<0> 
+ rs1_rdata rs1_sel<31> rs1_sel<30> rs1_sel<29> rs1_sel<28> rs1_sel<27> 
+ rs1_sel<26> rs1_sel<25> rs1_sel<24> rs1_sel<23> rs1_sel<22> rs1_sel<21> 
+ rs1_sel<20> rs1_sel<19> rs1_sel<18> rs1_sel<17> rs1_sel<16> rs1_sel<15> 
+ rs1_sel<14> rs1_sel<13> rs1_sel<12> rs1_sel<11> rs1_sel<10> rs1_sel<9> 
+ rs1_sel<8> rs1_sel<7> rs1_sel<6> rs1_sel<5> rs1_sel<4> rs1_sel<3> rs1_sel<2> 
+ rs1_sel<1> rs1_sel<0> rs2_rdata rs2_sel<31> rs2_sel<30> rs2_sel<29> 
+ rs2_sel<28> rs2_sel<27> rs2_sel<26> rs2_sel<25> rs2_sel<24> rs2_sel<23> 
+ rs2_sel<22> rs2_sel<21> rs2_sel<20> rs2_sel<19> rs2_sel<18> rs2_sel<17> 
+ rs2_sel<16> rs2_sel<15> rs2_sel<14> rs2_sel<13> rs2_sel<12> rs2_sel<11> 
+ rs2_sel<10> rs2_sel<9> rs2_sel<8> rs2_sel<7> rs2_sel<6> rs2_sel<5> 
+ rs2_sel<4> rs2_sel<3> rs2_sel<2> rs2_sel<1> rs2_sel<0>
*.PININFO clk:I rd_mux_out:I rd_sel<31>:I rd_sel<30>:I rd_sel<29>:I 
*.PININFO rd_sel<28>:I rd_sel<27>:I rd_sel<26>:I rd_sel<25>:I rd_sel<24>:I 
*.PININFO rd_sel<23>:I rd_sel<22>:I rd_sel<21>:I rd_sel<20>:I rd_sel<19>:I 
*.PININFO rd_sel<18>:I rd_sel<17>:I rd_sel<16>:I rd_sel<15>:I rd_sel<14>:I 
*.PININFO rd_sel<13>:I rd_sel<12>:I rd_sel<11>:I rd_sel<10>:I rd_sel<9>:I 
*.PININFO rd_sel<8>:I rd_sel<7>:I rd_sel<6>:I rd_sel<5>:I rd_sel<4>:I 
*.PININFO rd_sel<3>:I rd_sel<2>:I rd_sel<1>:I rd_sel<0>:I rs1_sel<31>:I 
*.PININFO rs1_sel<30>:I rs1_sel<29>:I rs1_sel<28>:I rs1_sel<27>:I 
*.PININFO rs1_sel<26>:I rs1_sel<25>:I rs1_sel<24>:I rs1_sel<23>:I 
*.PININFO rs1_sel<22>:I rs1_sel<21>:I rs1_sel<20>:I rs1_sel<19>:I 
*.PININFO rs1_sel<18>:I rs1_sel<17>:I rs1_sel<16>:I rs1_sel<15>:I 
*.PININFO rs1_sel<14>:I rs1_sel<13>:I rs1_sel<12>:I rs1_sel<11>:I 
*.PININFO rs1_sel<10>:I rs1_sel<9>:I rs1_sel<8>:I rs1_sel<7>:I rs1_sel<6>:I 
*.PININFO rs1_sel<5>:I rs1_sel<4>:I rs1_sel<3>:I rs1_sel<2>:I rs1_sel<1>:I 
*.PININFO rs1_sel<0>:I rs2_sel<31>:I rs2_sel<30>:I rs2_sel<29>:I rs2_sel<28>:I 
*.PININFO rs2_sel<27>:I rs2_sel<26>:I rs2_sel<25>:I rs2_sel<24>:I 
*.PININFO rs2_sel<23>:I rs2_sel<22>:I rs2_sel<21>:I rs2_sel<20>:I 
*.PININFO rs2_sel<19>:I rs2_sel<18>:I rs2_sel<17>:I rs2_sel<16>:I 
*.PININFO rs2_sel<15>:I rs2_sel<14>:I rs2_sel<13>:I rs2_sel<12>:I 
*.PININFO rs2_sel<11>:I rs2_sel<10>:I rs2_sel<9>:I rs2_sel<8>:I rs2_sel<7>:I 
*.PININFO rs2_sel<6>:I rs2_sel<5>:I rs2_sel<4>:I rs2_sel<3>:I rs2_sel<2>:I 
*.PININFO rs2_sel<1>:I rs2_sel<0>:I rs1_rdata:O rs2_rdata:O
XI0 clk rd_mux_out rs1_rdata net8 rs2_rdata net6 rs1_sel<31> rs1_sel<30> 
+ rs1_sel<29> rs1_sel<28> rs1_sel<27> rs1_sel<26> rs1_sel<25> rs1_sel<24> 
+ rs1_sel<23> rs1_sel<22> rs1_sel<21> rs1_sel<20> rs1_sel<19> rs1_sel<18> 
+ rs1_sel<17> rs1_sel<16> rs1_sel<15> rs1_sel<14> rs1_sel<13> rs1_sel<12> 
+ rs1_sel<11> rs1_sel<10> rs1_sel<9> rs1_sel<8> rs1_sel<7> rs1_sel<6> 
+ rs1_sel<5> rs1_sel<4> rs1_sel<3> rs1_sel<2> rs1_sel<1> rs1_sel<0> 
+ rs2_sel<31> rs2_sel<30> rs2_sel<29> rs2_sel<28> rs2_sel<27> rs2_sel<26> 
+ rs2_sel<25> rs2_sel<24> rs2_sel<23> rs2_sel<22> rs2_sel<21> rs2_sel<20> 
+ rs2_sel<19> rs2_sel<18> rs2_sel<17> rs2_sel<16> rs2_sel<15> rs2_sel<14> 
+ rs2_sel<13> rs2_sel<12> rs2_sel<11> rs2_sel<10> rs2_sel<9> rs2_sel<8> 
+ rs2_sel<7> rs2_sel<6> rs2_sel<5> rs2_sel<4> rs2_sel<3> rs2_sel<2> rs2_sel<1> 
+ rs2_sel<0> rd_sel<31> rd_sel<30> rd_sel<29> rd_sel<28> rd_sel<27> rd_sel<26> 
+ rd_sel<25> rd_sel<24> rd_sel<23> rd_sel<22> rd_sel<21> rd_sel<20> rd_sel<19> 
+ rd_sel<18> rd_sel<17> rd_sel<16> rd_sel<15> rd_sel<14> rd_sel<13> rd_sel<12> 
+ rd_sel<11> rd_sel<10> rd_sel<9> rd_sel<8> rd_sel<7> rd_sel<6> rd_sel<5> 
+ rd_sel<4> rd_sel<3> rd_sel<2> rd_sel<1> rd_sel<0> / reg2w32
.ENDS

************************************************************************
* Library Name: stdcell_rv32Lib
* Cell Name:    mux6
* View Name:    schematic
************************************************************************

.SUBCKT mux6 A B C D E F S0 S1 S2 Z
*.PININFO A:I B:I C:I D:I E:I F:I S0:I S1:I S2:I Z:O
XI7 F S0 S0b net4 / trans
XI0 A S0b S0 net2 / trans
XI9 net5 S2 S2b Z / trans
XI8 net1 S2b S2 Z / trans
XI13 net4 S1b S1 net5 / trans
XI6 net3 S1 S1b net1 / trans
XI5 net2 S1b S1 net1 / trans
XI4 E S0b S0 net4 / trans
XI3 D S0 S0b net3 / trans
XI2 C S0b S0 net3 / trans
XI1 B S0 S0b net2 / trans
XI12 S2 S2b / inv
XI11 S1 S1b / inv
XI10 S0 S0b / inv
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    mem_mux
* View Name:    schematic
************************************************************************

.SUBCKT mem_mux lb lbu lh lhu lw mem_mux_out mem_mux_sel<2> mem_mux_sel<1> 
+ mem_mux_sel<0>
*.PININFO lb:I lbu:I lh:I lhu:I lw:I mem_mux_sel<2>:I mem_mux_sel<1>:I 
*.PININFO mem_mux_sel<0>:I mem_mux_out:O
XI1 lb lh lw vss! lbu lhu mem_mux_sel<0> mem_mux_sel<1> mem_mux_sel<2> 
+ mem_mux_out / mux6
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    rd_mux
* View Name:    schematic
************************************************************************

.SUBCKT rd_mux alu_out cmp_out imm mem_mux_out pcp4 rd_mux_out rd_mux_sel<2> 
+ rd_mux_sel<1> rd_mux_sel<0> shift_out
*.PININFO alu_out:I cmp_out:I imm:I mem_mux_out:I pcp4:I rd_mux_sel<2>:I 
*.PININFO rd_mux_sel<1>:I rd_mux_sel<0>:I shift_out:I rd_mux_out:O
XI1 alu_out shift_out cmp_out imm pcp4 mem_mux_out rd_mux_sel<0> rd_mux_sel<1> 
+ rd_mux_sel<2> rd_mux_out / mux6
.ENDS

************************************************************************
* Library Name: bitslice_rv32Lib
* Cell Name:    bitslice
* View Name:    schematic
************************************************************************

.SUBCKT bitslice alu_cin alu_cout alu_inv_rs2 alu_mux_1_sel alu_mux_2_out 
+ alu_mux_2_sel alu_op<1> alu_op<0> alu_out clk cmp_eq_in cmp_eq_out cmp_lt_in 
+ cmp_lt_out cmp_mux_sel cmp_out cmp_src_a cmp_src_b imm lb lbu lh lhu lw 
+ mem_mux_sel<2> mem_mux_sel<1> mem_mux_sel<0> pc pc_adder_4 pc_cin pc_cout 
+ pc_mux_sel pc_reset_value rd_mux_sel<2> rd_mux_sel<1> rd_mux_sel<0> 
+ rd_sel<31> rd_sel<30> rd_sel<29> rd_sel<28> rd_sel<27> rd_sel<26> rd_sel<25> 
+ rd_sel<24> rd_sel<23> rd_sel<22> rd_sel<21> rd_sel<20> rd_sel<19> rd_sel<18> 
+ rd_sel<17> rd_sel<16> rd_sel<15> rd_sel<14> rd_sel<13> rd_sel<12> rd_sel<11> 
+ rd_sel<10> rd_sel<9> rd_sel<8> rd_sel<7> rd_sel<6> rd_sel<5> rd_sel<4> 
+ rd_sel<3> rd_sel<2> rd_sel<1> rd_sel<0> rs1_sel<31> rs1_sel<30> rs1_sel<29> 
+ rs1_sel<28> rs1_sel<27> rs1_sel<26> rs1_sel<25> rs1_sel<24> rs1_sel<23> 
+ rs1_sel<22> rs1_sel<21> rs1_sel<20> rs1_sel<19> rs1_sel<18> rs1_sel<17> 
+ rs1_sel<16> rs1_sel<15> rs1_sel<14> rs1_sel<13> rs1_sel<12> rs1_sel<11> 
+ rs1_sel<10> rs1_sel<9> rs1_sel<8> rs1_sel<7> rs1_sel<6> rs1_sel<5> 
+ rs1_sel<4> rs1_sel<3> rs1_sel<2> rs1_sel<1> rs1_sel<0> rs2_rdata rs2_sel<31> 
+ rs2_sel<30> rs2_sel<29> rs2_sel<28> rs2_sel<27> rs2_sel<26> rs2_sel<25> 
+ rs2_sel<24> rs2_sel<23> rs2_sel<22> rs2_sel<21> rs2_sel<20> rs2_sel<19> 
+ rs2_sel<18> rs2_sel<17> rs2_sel<16> rs2_sel<15> rs2_sel<14> rs2_sel<13> 
+ rs2_sel<12> rs2_sel<11> rs2_sel<10> rs2_sel<9> rs2_sel<8> rs2_sel<7> 
+ rs2_sel<6> rs2_sel<5> rs2_sel<4> rs2_sel<3> rs2_sel<2> rs2_sel<1> rs2_sel<0> 
+ rst shift_amount<4> shift_amount<3> shift_amount<2> shift_amount<1> 
+ shift_amount<0> shift_dir shift_in_from_left<4> shift_in_from_left<3> 
+ shift_in_from_left<2> shift_in_from_left<1> shift_in_from_left<0> 
+ shift_in_from_right<4> shift_in_from_right<3> shift_in_from_right<2> 
+ shift_in_from_right<1> shift_in_from_right<0> shift_out<5> shift_out<4> 
+ shift_out<3> shift_out<2> shift_out<1> shift_out<0>
*.PININFO alu_cin:I alu_inv_rs2:I alu_mux_1_sel:I alu_mux_2_sel:I alu_op<1>:I 
*.PININFO alu_op<0>:I clk:I cmp_eq_in:I cmp_lt_in:I cmp_mux_sel:I cmp_out:I 
*.PININFO imm:I lb:I lbu:I lh:I lhu:I lw:I mem_mux_sel<2>:I mem_mux_sel<1>:I 
*.PININFO mem_mux_sel<0>:I pc_adder_4:I pc_cin:I pc_mux_sel:I pc_reset_value:I 
*.PININFO rd_mux_sel<2>:I rd_mux_sel<1>:I rd_mux_sel<0>:I rd_sel<31>:I 
*.PININFO rd_sel<30>:I rd_sel<29>:I rd_sel<28>:I rd_sel<27>:I rd_sel<26>:I 
*.PININFO rd_sel<25>:I rd_sel<24>:I rd_sel<23>:I rd_sel<22>:I rd_sel<21>:I 
*.PININFO rd_sel<20>:I rd_sel<19>:I rd_sel<18>:I rd_sel<17>:I rd_sel<16>:I 
*.PININFO rd_sel<15>:I rd_sel<14>:I rd_sel<13>:I rd_sel<12>:I rd_sel<11>:I 
*.PININFO rd_sel<10>:I rd_sel<9>:I rd_sel<8>:I rd_sel<7>:I rd_sel<6>:I 
*.PININFO rd_sel<5>:I rd_sel<4>:I rd_sel<3>:I rd_sel<2>:I rd_sel<1>:I 
*.PININFO rd_sel<0>:I rs1_sel<31>:I rs1_sel<30>:I rs1_sel<29>:I rs1_sel<28>:I 
*.PININFO rs1_sel<27>:I rs1_sel<26>:I rs1_sel<25>:I rs1_sel<24>:I 
*.PININFO rs1_sel<23>:I rs1_sel<22>:I rs1_sel<21>:I rs1_sel<20>:I 
*.PININFO rs1_sel<19>:I rs1_sel<18>:I rs1_sel<17>:I rs1_sel<16>:I 
*.PININFO rs1_sel<15>:I rs1_sel<14>:I rs1_sel<13>:I rs1_sel<12>:I 
*.PININFO rs1_sel<11>:I rs1_sel<10>:I rs1_sel<9>:I rs1_sel<8>:I rs1_sel<7>:I 
*.PININFO rs1_sel<6>:I rs1_sel<5>:I rs1_sel<4>:I rs1_sel<3>:I rs1_sel<2>:I 
*.PININFO rs1_sel<1>:I rs1_sel<0>:I rs2_sel<31>:I rs2_sel<30>:I rs2_sel<29>:I 
*.PININFO rs2_sel<28>:I rs2_sel<27>:I rs2_sel<26>:I rs2_sel<25>:I 
*.PININFO rs2_sel<24>:I rs2_sel<23>:I rs2_sel<22>:I rs2_sel<21>:I 
*.PININFO rs2_sel<20>:I rs2_sel<19>:I rs2_sel<18>:I rs2_sel<17>:I 
*.PININFO rs2_sel<16>:I rs2_sel<15>:I rs2_sel<14>:I rs2_sel<13>:I 
*.PININFO rs2_sel<12>:I rs2_sel<11>:I rs2_sel<10>:I rs2_sel<9>:I rs2_sel<8>:I 
*.PININFO rs2_sel<7>:I rs2_sel<6>:I rs2_sel<5>:I rs2_sel<4>:I rs2_sel<3>:I 
*.PININFO rs2_sel<2>:I rs2_sel<1>:I rs2_sel<0>:I rst:I shift_amount<4>:I 
*.PININFO shift_amount<3>:I shift_amount<2>:I shift_amount<1>:I 
*.PININFO shift_amount<0>:I shift_dir:I shift_in_from_left<4>:I 
*.PININFO shift_in_from_left<3>:I shift_in_from_left<2>:I 
*.PININFO shift_in_from_left<1>:I shift_in_from_left<0>:I 
*.PININFO shift_in_from_right<4>:I shift_in_from_right<3>:I 
*.PININFO shift_in_from_right<2>:I shift_in_from_right<1>:I 
*.PININFO shift_in_from_right<0>:I alu_cout:O alu_mux_2_out:O alu_out:O 
*.PININFO cmp_eq_out:O cmp_lt_out:O cmp_src_a:O cmp_src_b:O pc:O pc_cout:O 
*.PININFO rs2_rdata:O shift_out<5>:O shift_out<4>:O shift_out<3>:O 
*.PININFO shift_out<2>:O shift_out<1>:O shift_out<0>:O
XI0 alu_cin alu_cout alu_mux_1_out alu_mux_2_out alu_op<1> alu_op<0> alu_out / 
+ alu
XI1 alu_mux_1_out shift_amount<4> shift_amount<3> shift_amount<2> 
+ shift_amount<1> shift_amount<0> shift_dir shift_in_from_left<4> 
+ shift_in_from_left<3> shift_in_from_left<2> shift_in_from_left<1> 
+ shift_in_from_left<0> shift_in_from_right<4> shift_in_from_right<3> 
+ shift_in_from_right<2> shift_in_from_right<1> shift_in_from_right<0> 
+ shift_out<5> shift_out<4> shift_out<3> shift_out<2> shift_out<1> 
+ shift_out<0> / shift
XI2 cmp_eq_in cmp_eq_out cmp_lt_in cmp_lt_out cmp_src_b cmp_src_a / cmp
XI5 rs2_rdata imm cmp_mux_sel cmp_src_b / mux2
XI4 net3 imm alu_mux_2_sel alu_mux_2_out / mux2
XI3 cmp_src_a pc alu_mux_1_sel alu_mux_1_out / mux2
XI6 alu_inv_rs2 net3 rs2_rdata / rs2_inverter
XI7 alu_out clk pc pc_mux_sel pc_reset_value pcp4 rst / pc
XI8 pc pc_adder_4 pc_cin pc_cout pcp4 / pcadder
XI9 clk rd_mux_out rd_sel<31> rd_sel<30> rd_sel<29> rd_sel<28> rd_sel<27> 
+ rd_sel<26> rd_sel<25> rd_sel<24> rd_sel<23> rd_sel<22> rd_sel<21> rd_sel<20> 
+ rd_sel<19> rd_sel<18> rd_sel<17> rd_sel<16> rd_sel<15> rd_sel<14> rd_sel<13> 
+ rd_sel<12> rd_sel<11> rd_sel<10> rd_sel<9> rd_sel<8> rd_sel<7> rd_sel<6> 
+ rd_sel<5> rd_sel<4> rd_sel<3> rd_sel<2> rd_sel<1> rd_sel<0> cmp_src_a 
+ rs1_sel<31> rs1_sel<30> rs1_sel<29> rs1_sel<28> rs1_sel<27> rs1_sel<26> 
+ rs1_sel<25> rs1_sel<24> rs1_sel<23> rs1_sel<22> rs1_sel<21> rs1_sel<20> 
+ rs1_sel<19> rs1_sel<18> rs1_sel<17> rs1_sel<16> rs1_sel<15> rs1_sel<14> 
+ rs1_sel<13> rs1_sel<12> rs1_sel<11> rs1_sel<10> rs1_sel<9> rs1_sel<8> 
+ rs1_sel<7> rs1_sel<6> rs1_sel<5> rs1_sel<4> rs1_sel<3> rs1_sel<2> rs1_sel<1> 
+ rs1_sel<0> rs2_rdata rs2_sel<31> rs2_sel<30> rs2_sel<29> rs2_sel<28> 
+ rs2_sel<27> rs2_sel<26> rs2_sel<25> rs2_sel<24> rs2_sel<23> rs2_sel<22> 
+ rs2_sel<21> rs2_sel<20> rs2_sel<19> rs2_sel<18> rs2_sel<17> rs2_sel<16> 
+ rs2_sel<15> rs2_sel<14> rs2_sel<13> rs2_sel<12> rs2_sel<11> rs2_sel<10> 
+ rs2_sel<9> rs2_sel<8> rs2_sel<7> rs2_sel<6> rs2_sel<5> rs2_sel<4> rs2_sel<3> 
+ rs2_sel<2> rs2_sel<1> rs2_sel<0> / regfile
XI10 lb lbu lh lhu lw mem_mux_out mem_mux_sel<2> mem_mux_sel<1> mem_mux_sel<0> 
+ / mem_mux
XI11 alu_out cmp_out imm mem_mux_out pcp4 rd_mux_out rd_mux_sel<2> 
+ rd_mux_sel<1> rd_mux_sel<0> shift_out<5> / rd_mux
.ENDS

