
`timescale 1ns / 1ns

module test;


wire  alu_cout, alu_mux_2_out, alu_out, cmp_eq_out, cmp_lt_out, 
     cmp_src_a, cmp_src_b, pc, pc_cout, rs2_rdata;

reg  alu_cin, alu_inv_rs2, alu_mux_1_sel, alu_mux_2_sel, clk, cmp_eq_in
     , cmp_lt_in, cmp_mux_sel, cmp_out, imm, lb, lbu, lh, lhu, lw, 
     pc_adder_4, pc_cin, pc_mux_sel, pc_reset_value, rst, shift_dir;

wire [5:0]  shift_out;

reg [4:0]  shift_in_from_left;
reg [4:0]  shift_in_from_right;
reg [4:0]  shift_amount;
reg [2:0]  rd_mux_sel;
reg [2:0]  mem_mux_sel;
reg [1:0]  alu_op;
reg [31:0]  rd_sel;
reg [31:0]  rs2_sel;
reg [31:0]  rs1_sel;



bitslice top(alu_cout, alu_mux_2_out, alu_out, cmp_eq_out, cmp_lt_out, 
     cmp_src_a, cmp_src_b, pc, pc_cout, rs2_rdata, shift_out, alu_cin, 
     alu_inv_rs2, alu_mux_1_sel, alu_mux_2_sel, alu_op, clk, cmp_eq_in
     , cmp_lt_in, cmp_mux_sel, cmp_out, imm, lb, lbu, lh, lhu, lw, 
     mem_mux_sel, pc_adder_4, pc_cin, pc_mux_sel, pc_reset_value, 
     rd_mux_sel, rd_sel, rs1_sel, rs2_sel, rst, shift_amount, shift_dir
     , shift_in_from_left, shift_in_from_right); 
 

`ifdef verilog

 //please enter any additional verilog stimulus in the /home/maxma2/Documents/Coursework/ece425/mp2/lib/bitslice_run1/testfixture.verilog file
`include "/home/maxma2/Documents/Coursework/ece425/mp2/lib/bitslice_run1/testfixture.verilog"

`endif

endmodule 
